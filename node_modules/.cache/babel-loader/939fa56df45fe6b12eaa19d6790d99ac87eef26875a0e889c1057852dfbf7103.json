{"ast":null,"code":"var _jsxFileName = \"G:\\\\NUR\\\\test-sps-react\\\\src\\\\routes.js\";\nimport { createBrowserRouter } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Users from \"./pages/Users\";\nimport UserEdit, { userLoader } from \"./pages/UserEdit\";\nimport SignIn from \"./pages/SignIn\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst requireAuth = () => {\n  const token = localStorage.getItem('token'); // Verificar en localStorage\n  if (!token) {\n    throw new Response(\"Unauthorized\", {\n      status: 401\n    }); // Redirige si no hay token\n  }\n  return null; // Continuar si el token existe\n};\nconst router = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 14\n  }, this)\n}, {\n  path: \"/signin\",\n  element: /*#__PURE__*/_jsxDEV(SignIn, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 14\n  }, this)\n}, {\n  path: \"/users\",\n  element: /*#__PURE__*/_jsxDEV(Users, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 14\n  }, this),\n  loader: requireAuth\n}, {\n  path: \"/users/:userId\",\n  element: /*#__PURE__*/_jsxDEV(UserEdit, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 14\n  }, this),\n  loader: userLoader\n}]);\nexport default router;","map":{"version":3,"names":["createBrowserRouter","Home","Users","UserEdit","userLoader","SignIn","jsxDEV","_jsxDEV","requireAuth","token","localStorage","getItem","Response","status","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","loader"],"sources":["G:/NUR/test-sps-react/src/routes.js"],"sourcesContent":["import { createBrowserRouter } from \"react-router-dom\";\r\n\r\nimport Home from \"./pages/Home\";\r\nimport Users from \"./pages/Users\";\r\nimport UserEdit, { userLoader } from \"./pages/UserEdit\";\r\nimport SignIn from \"./pages/SignIn\";\r\n\r\nconst requireAuth = () => {\r\n  const token = localStorage.getItem('token'); // Verificar en localStorage\r\n  if (!token) {\r\n    throw new Response(\"Unauthorized\", { status: 401 }); // Redirige si no hay token\r\n  }\r\n  return null; // Continuar si el token existe\r\n};\r\n\r\nconst router = createBrowserRouter([\r\n  {\r\n    path: \"/\",\r\n    element: <Home />,\r\n  },\r\n  {\r\n    path: \"/signin\",  \r\n    element: <SignIn />, \r\n  },\r\n  {\r\n    path: \"/users\",\r\n    element: <Users />,\r\n    loader: requireAuth, \r\n  },\r\n  {\r\n    path: \"/users/:userId\",\r\n    element: <UserEdit />,\r\n    loader: userLoader,\r\n  },\r\n]);\r\n\r\nexport default router;\r\n"],"mappings":";AAAA,SAASA,mBAAmB,QAAQ,kBAAkB;AAEtD,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,QAAQ,IAAIC,UAAU,QAAQ,kBAAkB;AACvD,OAAOC,MAAM,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACxB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;EAC7C,IAAI,CAACF,KAAK,EAAE;IACV,MAAM,IAAIG,QAAQ,CAAC,cAAc,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC,CAAC,CAAC;EACvD;EACA,OAAO,IAAI,CAAC,CAAC;AACf,CAAC;AAED,MAAMC,MAAM,GAAGd,mBAAmB,CAAC,CACjC;EACEe,IAAI,EAAE,GAAG;EACTC,OAAO,eAAET,OAAA,CAACN,IAAI;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAClB,CAAC,EACD;EACEL,IAAI,EAAE,SAAS;EACfC,OAAO,eAAET,OAAA,CAACF,MAAM;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AACpB,CAAC,EACD;EACEL,IAAI,EAAE,QAAQ;EACdC,OAAO,eAAET,OAAA,CAACL,KAAK;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAClBC,MAAM,EAAEb;AACV,CAAC,EACD;EACEO,IAAI,EAAE,gBAAgB;EACtBC,OAAO,eAAET,OAAA,CAACJ,QAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EACrBC,MAAM,EAAEjB;AACV,CAAC,CACF,CAAC;AAEF,eAAeU,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}