{"ast":null,"code":"import axios from \"axios\";\nclass UserService {\n  constructor() {\n    this.baseURL = 'http://localhost:3000/users';\n    this.token = localStorage.getItem('token') || '';\n    this.header = {\n      headers: {\n        'authorization': `Bearer ${this.token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    };\n  }\n  async list() {\n    try {\n      const {\n        data\n      } = await axios.get(this.baseURL, this.header);\n      console.log(data);\n      return data.data; // Regresa la lista de usuarios\n    } catch (error) {\n      console.error(error);\n      if (error.response && (error.response.status === 403 || error.response.status === 401)) {\n        this.expirado();\n      }\n      throw error; // Lanza el error para manejarlo en otros lugares\n    }\n  }\n  async get(id) {\n    try {\n      const {\n        data\n      } = await axios.get(`${this.baseURL}/${id}`, this.header);\n      return data;\n    } catch (error) {\n      console.error(error);\n      if (error.response && (error.response.status === 403 || error.response.status === 401)) {\n        this.expirado();\n      }\n      throw error;\n    }\n  }\n  async create(userData) {\n    try {\n      const {\n        data\n      } = await axios.post(`${this.baseURL}/store`, userData, this.header);\n      console.log(data);\n      return data;\n    } catch (error) {\n      console.error(error);\n      if (error.response && (error.response.status === 403 || error.response.status === 401)) {\n        this.expirado();\n      }\n      throw error; // Lanza el error para manejarlo en otros lugares\n    }\n  }\n  async delete(id) {\n    try {\n      const {\n        data\n      } = await axios.delete(`${this.baseURL}/${id}`, this.header);\n      return data;\n    } catch (error) {\n      console.error(error);\n      if (error.response && (error.response.status === 403 || error.response.status === 401)) {\n        this.expirado();\n      }\n      throw error;\n    }\n  }\n  async update(id, data) {\n    try {\n      const {\n        data\n      } = await axios.put(`${this.baseURL}/${id}`, data, this.header);\n      return data;\n    } catch (error) {\n      console.error(error);\n      if (error.response && (error.response.status === 403 || error.response.status === 401)) {\n        this.expirado();\n      }\n      throw error;\n    }\n  }\n}\nconst userServiceInstance = new UserService();\nexport default userServiceInstance;","map":{"version":3,"names":["axios","UserService","constructor","baseURL","token","localStorage","getItem","header","headers","list","data","get","console","log","error","response","status","expirado","id","create","userData","post","delete","update","put","userServiceInstance"],"sources":["G:/NUR/test-sps-react/src/services/UserService.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nclass UserService {\r\n  constructor() {\r\n    this.baseURL = 'http://localhost:3000/users';\r\n    this.token = localStorage.getItem('token') || '';\r\n    this.header = {\r\n      headers: {\r\n        'authorization': `Bearer ${this.token}`,\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json', \r\n      },\r\n    };\r\n  }\r\n  async list() {\r\n    try {\r\n      const { data } = await axios.get(this.baseURL, this.header);\r\n      console.log(data);\r\n      return data.data;  // Regresa la lista de usuarios\r\n    } catch (error) {\r\n      console.error(error);\r\n      if (error.response && (error.response.status === 403 || error.response.status === 401)) {\r\n        this.expirado();\r\n      }\r\n      throw error; // Lanza el error para manejarlo en otros lugares\r\n    }\r\n  }\r\n  async get(id) {\r\n    try {\r\n      const { data } = await axios.get(`${this.baseURL}/${id}`, this.header);\r\n      return data; \r\n    } catch (error) {\r\n      console.error(error);\r\n      if (error.response && (error.response.status === 403 || error.response.status === 401)) {\r\n        this.expirado();\r\n      }\r\n      throw error; \r\n    }\r\n  }\r\n  async create(userData) {\r\n    try {\r\n      const { data } = await axios.post(`${this.baseURL}/store`, userData, this.header);\r\n      console.log(data);\r\n      return data;\r\n    } catch (error) {\r\n      console.error(error);\r\n      if (error.response && (error.response.status === 403 || error.response.status === 401)) {\r\n        this.expirado();\r\n      }\r\n      throw error; // Lanza el error para manejarlo en otros lugares\r\n    }\r\n  }\r\n  async delete(id) {\r\n    try {\r\n      const { data } = await axios.delete(`${this.baseURL}/${id}`, this.header);\r\n      return data; \r\n    } catch (error) {\r\n      console.error(error);\r\n      if (error.response && (error.response.status === 403 || error.response.status === 401)) {\r\n        this.expirado();\r\n      }\r\n      throw error; \r\n    }\r\n  }\r\n  async update(id, data) {\r\n   try {\r\n      const { data } = await axios.put(`${this.baseURL}/${id}`, data, this.header);\r\n      return data; \r\n    } catch (error) {\r\n      console.error(error);\r\n      if (error.response && (error.response.status === 403 || error.response.status === 401)) {\r\n        this.expirado();\r\n      }\r\n      throw error; \r\n    }\r\n  }\r\n}\r\n\r\nconst userServiceInstance = new UserService();\r\nexport default userServiceInstance;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}